{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(authService, habitService, leaderboardService, fb, router) {\n    this.authService = authService;\n    this.habitService = habitService;\n    this.leaderboardService = leaderboardService;\n    this.fb = fb;\n    this.router = router;\n    this.user = null;\n    this.habits = [];\n    this.userRank = null;\n    this.showCreateHabit = false;\n    this.habitForm = this.fb.group({\n      name: ['', Validators.required],\n      description: [''],\n      category: ['health', Validators.required],\n      difficulty: ['medium', Validators.required],\n      targetFrequency: [1]\n    });\n  }\n  ngOnInit() {\n    this.user = this.authService.getCurrentUser();\n    this.loadHabits();\n    this.loadUserRank();\n  }\n  loadHabits() {\n    this.habitService.getHabits().subscribe(habits => {\n      this.habits = habits;\n    });\n  }\n  loadUserRank() {\n    this.leaderboardService.getUserRank().subscribe(rank => {\n      this.userRank = rank;\n    });\n  }\n  createHabit() {\n    if (this.habitForm.valid) {\n      this.habitService.createHabit(this.habitForm.value).subscribe(() => {\n        this.loadHabits();\n        this.showCreateHabit = false;\n        this.habitForm.reset({\n          category: 'health',\n          difficulty: 'medium',\n          targetFrequency: 1\n        });\n      });\n    }\n  }\n  completeHabit(habitId) {\n    this.habitService.completeHabit(habitId).subscribe(response => {\n      this.loadHabits();\n      // Update user XP and level\n      if (this.user) {\n        this.user.totalXP += response.xpEarned;\n        this.user.level = response.newLevel;\n      }\n    });\n  }\n  deleteHabit(habitId) {\n    if (confirm('Are you sure you want to delete this habit?')) {\n      this.habitService.deleteHabit(habitId).subscribe(() => {\n        this.loadHabits();\n      });\n    }\n  }\n  isCompletedToday(habit) {\n    if (!habit.lastCompletedDate) return false;\n    const today = new Date().toDateString();\n    return new Date(habit.lastCompletedDate).toDateString() === today;\n  }\n  getLevelProgress() {\n    if (!this.user) return 0;\n    const currentLevelXP = (this.user.level - 1) * (this.user.level - 1) * 50;\n    const nextLevelXP = this.user.level * this.user.level * 50;\n    const progress = (this.user.totalXP - currentLevelXP) / (nextLevelXP - currentLevelXP) * 100;\n    return Math.min(100, Math.max(0, progress));\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  template: `\n    <div class=\"min-h-screen bg-gray-50\">\n      <!-- Header -->\n      <header class=\"bg-white shadow-sm border-b\">\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div class=\"flex justify-between items-center h-16\">\n            <div class=\"flex items-center space-x-4\">\n              <h1 class=\"text-2xl font-bold text-gray-900\">🎯 HabitTracker</h1>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n              <div class=\"text-right\">\n                <p class=\"text-sm text-gray-600\">Welcome back,</p>\n                <p class=\"font-semibold text-gray-900\">{{ user?.username }}</p>\n              </div>\n              <button \n                (click)=\"logout()\"\n                class=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-colors\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <!-- Stats Cards -->\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <div class=\"bg-gradient-to-r from-purple-500 to-purple-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-purple-100\">Level</p>\n                <p class=\"text-3xl font-bold\">{{ user?.level }}</p>\n              </div>\n              <div class=\"text-4xl\">🏆</div>\n            </div>\n          </div>\n\n          <div class=\"bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-blue-100\">Total XP</p>\n                <p class=\"text-3xl font-bold\">{{ user?.totalXP | number }}</p>\n              </div>\n              <div class=\"text-4xl\">⭐</div>\n            </div>\n          </div>\n\n          <div class=\"bg-gradient-to-r from-green-500 to-green-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-green-100\">Rank</p>\n                <p class=\"text-3xl font-bold\">#{{ userRank?.rank }}</p>\n              </div>\n              <div class=\"text-4xl\">🥇</div>\n            </div>\n          </div>\n\n          <div class=\"bg-gradient-to-r from-orange-500 to-orange-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-orange-100\">Completed</p>\n                <p class=\"text-3xl font-bold\">{{ user?.stats?.totalHabitsCompleted }}</p>\n              </div>\n              <div class=\"text-4xl\">✅</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Main Content -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <!-- Habits Section -->\n          <div class=\"lg:col-span-2\">\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\n              <div class=\"flex justify-between items-center mb-6\">\n                <h2 class=\"text-xl font-bold text-gray-900\">Today's Habits</h2>\n                <button \n                  (click)=\"showCreateHabit = true\"\n                  class=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-lg transition-colors\"\n                >\n                  + Add Habit\n                </button>\n              </div>\n\n              <div *ngIf=\"habits.length === 0\" class=\"text-center py-12\">\n                <div class=\"text-6xl mb-4\">🎯</div>\n                <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">No habits yet</h3>\n                <p class=\"text-gray-600\">Create your first habit to start your journey!</p>\n              </div>\n\n              <div class=\"space-y-4\">\n                <div *ngFor=\"let habit of habits\" \n                     class=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div class=\"flex items-center justify-between\">\n                    <div class=\"flex-1\">\n                      <div class=\"flex items-center space-x-3\">\n                        <h3 class=\"font-semibold text-gray-900\">{{ habit.name }}</h3>\n                        <span class=\"px-2 py-1 text-xs rounded-full\"\n                              [ngClass]=\"{\n                                'bg-green-100 text-green-800': habit.difficulty === 'easy',\n                                'bg-yellow-100 text-yellow-800': habit.difficulty === 'medium',\n                                'bg-red-100 text-red-800': habit.difficulty === 'hard'\n                              }\">\n                          {{ habit.difficulty }}\n                        </span>\n                      </div>\n                      <p class=\"text-gray-600 text-sm mt-1\">{{ habit.description }}</p>\n                      <div class=\"flex items-center space-x-4 mt-2\">\n                        <span class=\"text-sm text-gray-500\">🔥 {{ habit.currentStreak }} day streak</span>\n                        <span class=\"text-sm text-gray-500\">📈 Best: {{ habit.longestStreak }}</span>\n                      </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                      <button \n                        (click)=\"completeHabit(habit._id)\"\n                        [disabled]=\"isCompletedToday(habit)\"\n                        class=\"px-4 py-2 rounded-lg font-medium transition-colors\"\n                        [ngClass]=\"{\n                          'bg-green-500 hover:bg-green-600 text-white': !isCompletedToday(habit),\n                          'bg-gray-300 text-gray-500 cursor-not-allowed': isCompletedToday(habit)\n                        }\"\n                      >\n                        {{ isCompletedToday(habit) ? '✓ Done' : 'Complete' }}\n                      </button>\n                      <button \n                        (click)=\"deleteHabit(habit._id)\"\n                        class=\"text-red-500 hover:text-red-700 p-2\"\n                      >\n                        🗑️\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Sidebar -->\n          <div class=\"space-y-6\">\n            <!-- Achievements -->\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\n              <h3 class=\"text-lg font-bold text-gray-900 mb-4\">🏆 Recent Achievements</h3>\n              <div *ngIf=\"user?.achievements?.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-gray-500\">No achievements yet</p>\n              </div>\n              <div class=\"space-y-3\">\n                <div *ngFor=\"let achievement of user?.achievements?.slice(0, 3)\" \n                     class=\"flex items-center space-x-3 p-3 bg-yellow-50 rounded-lg\">\n                  <div class=\"text-2xl\">🏆</div>\n                  <div>\n                    <p class=\"font-semibold text-gray-900\">{{ achievement.name }}</p>\n                    <p class=\"text-sm text-gray-600\">{{ achievement.unlockedAt | date:'short' }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Progress -->\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\n              <h3 class=\"text-lg font-bold text-gray-900 mb-4\">📊 Progress</h3>\n              <div class=\"space-y-4\">\n                <div>\n                  <div class=\"flex justify-between text-sm mb-1\">\n                    <span>Level Progress</span>\n                    <span>{{ getLevelProgress() }}%</span>\n                  </div>\n                  <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div class=\"bg-purple-500 h-2 rounded-full transition-all\" \n                         [style.width.%]=\"getLevelProgress()\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Create Habit Modal -->\n      <div *ngIf=\"showCreateHabit\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n        <div class=\"bg-white rounded-xl p-6 w-full max-w-md\">\n          <h3 class=\"text-lg font-bold mb-4\">Create New Habit</h3>\n          <form [formGroup]=\"habitForm\" (ngSubmit)=\"createHabit()\">\n            <div class=\"space-y-4\">\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Name</label>\n                <input formControlName=\"name\" class=\"w-full px-3 py-2 border rounded-lg\">\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Description</label>\n                <textarea formControlName=\"description\" class=\"w-full px-3 py-2 border rounded-lg\"></textarea>\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Category</label>\n                <select formControlName=\"category\" class=\"w-full px-3 py-2 border rounded-lg\">\n                  <option value=\"health\">Health</option>\n                  <option value=\"fitness\">Fitness</option>\n                  <option value=\"learning\">Learning</option>\n                  <option value=\"productivity\">Productivity</option>\n                  <option value=\"mindfulness\">Mindfulness</option>\n                </select>\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Difficulty</label>\n                <select formControlName=\"difficulty\" class=\"w-full px-3 py-2 border rounded-lg\">\n                  <option value=\"easy\">Easy (8 XP)</option>\n                  <option value=\"medium\">Medium (10 XP)</option>\n                  <option value=\"hard\">Hard (15 XP)</option>\n                </select>\n              </div>\n            </div>\n            <div class=\"flex space-x-3 mt-6\">\n              <button type=\"submit\" class=\"flex-1 bg-purple-500 text-white py-2 rounded-lg\">Create</button>\n              <button type=\"button\" (click)=\"showCreateHabit = false\" class=\"flex-1 bg-gray-300 py-2 rounded-lg\">Cancel</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  `\n})], DashboardComponent);","map":{"version":3,"names":["Component","DashboardComponent","constructor","authService","habitService","leaderboardService","fb","router","user","habits","userRank","showCreateHabit","habitForm","group","name","Validators","required","description","category","difficulty","targetFrequency","ngOnInit","getCurrentUser","loadHabits","loadUserRank","getHabits","subscribe","getUserRank","rank","createHabit","valid","value","reset","completeHabit","habitId","response","totalXP","xpEarned","level","newLevel","deleteHabit","confirm","isCompletedToday","habit","lastCompletedDate","today","Date","toDateString","getLevelProgress","currentLevelXP","nextLevelXP","progress","Math","min","max","logout","navigate","__decorate","selector","template"],"sources":["C:\\Users\\Suvojit\\OneDrive\\Desktop\\angular projects\\habittracker\\frontend\\src\\app\\features\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../core/services/auth.service';\nimport { HabitService } from '../../core/services/habit.service';\nimport { LeaderboardService } from '../../core/services/leaderboard.service';\nimport { User } from '../../core/models/user.model';\nimport { Habit } from '../../core/models/habit.model';\nimport { UserRank } from '../../core/services/leaderboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  template: `\n    <div class=\"min-h-screen bg-gray-50\">\n      <!-- Header -->\n      <header class=\"bg-white shadow-sm border-b\">\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div class=\"flex justify-between items-center h-16\">\n            <div class=\"flex items-center space-x-4\">\n              <h1 class=\"text-2xl font-bold text-gray-900\">🎯 HabitTracker</h1>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n              <div class=\"text-right\">\n                <p class=\"text-sm text-gray-600\">Welcome back,</p>\n                <p class=\"font-semibold text-gray-900\">{{ user?.username }}</p>\n              </div>\n              <button \n                (click)=\"logout()\"\n                class=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-colors\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <!-- Stats Cards -->\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <div class=\"bg-gradient-to-r from-purple-500 to-purple-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-purple-100\">Level</p>\n                <p class=\"text-3xl font-bold\">{{ user?.level }}</p>\n              </div>\n              <div class=\"text-4xl\">🏆</div>\n            </div>\n          </div>\n\n          <div class=\"bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-blue-100\">Total XP</p>\n                <p class=\"text-3xl font-bold\">{{ user?.totalXP | number }}</p>\n              </div>\n              <div class=\"text-4xl\">⭐</div>\n            </div>\n          </div>\n\n          <div class=\"bg-gradient-to-r from-green-500 to-green-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-green-100\">Rank</p>\n                <p class=\"text-3xl font-bold\">#{{ userRank?.rank }}</p>\n              </div>\n              <div class=\"text-4xl\">🥇</div>\n            </div>\n          </div>\n\n          <div class=\"bg-gradient-to-r from-orange-500 to-orange-600 rounded-xl p-6 text-white\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-orange-100\">Completed</p>\n                <p class=\"text-3xl font-bold\">{{ user?.stats?.totalHabitsCompleted }}</p>\n              </div>\n              <div class=\"text-4xl\">✅</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Main Content -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <!-- Habits Section -->\n          <div class=\"lg:col-span-2\">\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\n              <div class=\"flex justify-between items-center mb-6\">\n                <h2 class=\"text-xl font-bold text-gray-900\">Today's Habits</h2>\n                <button \n                  (click)=\"showCreateHabit = true\"\n                  class=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-lg transition-colors\"\n                >\n                  + Add Habit\n                </button>\n              </div>\n\n              <div *ngIf=\"habits.length === 0\" class=\"text-center py-12\">\n                <div class=\"text-6xl mb-4\">🎯</div>\n                <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">No habits yet</h3>\n                <p class=\"text-gray-600\">Create your first habit to start your journey!</p>\n              </div>\n\n              <div class=\"space-y-4\">\n                <div *ngFor=\"let habit of habits\" \n                     class=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div class=\"flex items-center justify-between\">\n                    <div class=\"flex-1\">\n                      <div class=\"flex items-center space-x-3\">\n                        <h3 class=\"font-semibold text-gray-900\">{{ habit.name }}</h3>\n                        <span class=\"px-2 py-1 text-xs rounded-full\"\n                              [ngClass]=\"{\n                                'bg-green-100 text-green-800': habit.difficulty === 'easy',\n                                'bg-yellow-100 text-yellow-800': habit.difficulty === 'medium',\n                                'bg-red-100 text-red-800': habit.difficulty === 'hard'\n                              }\">\n                          {{ habit.difficulty }}\n                        </span>\n                      </div>\n                      <p class=\"text-gray-600 text-sm mt-1\">{{ habit.description }}</p>\n                      <div class=\"flex items-center space-x-4 mt-2\">\n                        <span class=\"text-sm text-gray-500\">🔥 {{ habit.currentStreak }} day streak</span>\n                        <span class=\"text-sm text-gray-500\">📈 Best: {{ habit.longestStreak }}</span>\n                      </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                      <button \n                        (click)=\"completeHabit(habit._id)\"\n                        [disabled]=\"isCompletedToday(habit)\"\n                        class=\"px-4 py-2 rounded-lg font-medium transition-colors\"\n                        [ngClass]=\"{\n                          'bg-green-500 hover:bg-green-600 text-white': !isCompletedToday(habit),\n                          'bg-gray-300 text-gray-500 cursor-not-allowed': isCompletedToday(habit)\n                        }\"\n                      >\n                        {{ isCompletedToday(habit) ? '✓ Done' : 'Complete' }}\n                      </button>\n                      <button \n                        (click)=\"deleteHabit(habit._id)\"\n                        class=\"text-red-500 hover:text-red-700 p-2\"\n                      >\n                        🗑️\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Sidebar -->\n          <div class=\"space-y-6\">\n            <!-- Achievements -->\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\n              <h3 class=\"text-lg font-bold text-gray-900 mb-4\">🏆 Recent Achievements</h3>\n              <div *ngIf=\"user?.achievements?.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-gray-500\">No achievements yet</p>\n              </div>\n              <div class=\"space-y-3\">\n                <div *ngFor=\"let achievement of user?.achievements?.slice(0, 3)\" \n                     class=\"flex items-center space-x-3 p-3 bg-yellow-50 rounded-lg\">\n                  <div class=\"text-2xl\">🏆</div>\n                  <div>\n                    <p class=\"font-semibold text-gray-900\">{{ achievement.name }}</p>\n                    <p class=\"text-sm text-gray-600\">{{ achievement.unlockedAt | date:'short' }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Progress -->\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\n              <h3 class=\"text-lg font-bold text-gray-900 mb-4\">📊 Progress</h3>\n              <div class=\"space-y-4\">\n                <div>\n                  <div class=\"flex justify-between text-sm mb-1\">\n                    <span>Level Progress</span>\n                    <span>{{ getLevelProgress() }}%</span>\n                  </div>\n                  <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div class=\"bg-purple-500 h-2 rounded-full transition-all\" \n                         [style.width.%]=\"getLevelProgress()\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Create Habit Modal -->\n      <div *ngIf=\"showCreateHabit\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n        <div class=\"bg-white rounded-xl p-6 w-full max-w-md\">\n          <h3 class=\"text-lg font-bold mb-4\">Create New Habit</h3>\n          <form [formGroup]=\"habitForm\" (ngSubmit)=\"createHabit()\">\n            <div class=\"space-y-4\">\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Name</label>\n                <input formControlName=\"name\" class=\"w-full px-3 py-2 border rounded-lg\">\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Description</label>\n                <textarea formControlName=\"description\" class=\"w-full px-3 py-2 border rounded-lg\"></textarea>\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Category</label>\n                <select formControlName=\"category\" class=\"w-full px-3 py-2 border rounded-lg\">\n                  <option value=\"health\">Health</option>\n                  <option value=\"fitness\">Fitness</option>\n                  <option value=\"learning\">Learning</option>\n                  <option value=\"productivity\">Productivity</option>\n                  <option value=\"mindfulness\">Mindfulness</option>\n                </select>\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium mb-1\">Difficulty</label>\n                <select formControlName=\"difficulty\" class=\"w-full px-3 py-2 border rounded-lg\">\n                  <option value=\"easy\">Easy (8 XP)</option>\n                  <option value=\"medium\">Medium (10 XP)</option>\n                  <option value=\"hard\">Hard (15 XP)</option>\n                </select>\n              </div>\n            </div>\n            <div class=\"flex space-x-3 mt-6\">\n              <button type=\"submit\" class=\"flex-1 bg-purple-500 text-white py-2 rounded-lg\">Create</button>\n              <button type=\"button\" (click)=\"showCreateHabit = false\" class=\"flex-1 bg-gray-300 py-2 rounded-lg\">Cancel</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class DashboardComponent implements OnInit {\n  user: User | null = null;\n  habits: Habit[] = [];\n  userRank: UserRank | null = null;\n  showCreateHabit = false;\n  habitForm = this.fb.group({\n    name: ['', Validators.required],\n    description: [''],\n    category: ['health', Validators.required],\n    difficulty: ['medium', Validators.required],\n    targetFrequency: [1]\n  });\n\n  constructor(\n    private authService: AuthService,\n    private habitService: HabitService,\n    private leaderboardService: LeaderboardService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.user = this.authService.getCurrentUser();\n    this.loadHabits();\n    this.loadUserRank();\n  }\n\n  loadHabits(): void {\n    this.habitService.getHabits().subscribe(habits => {\n      this.habits = habits;\n    });\n  }\n\n  loadUserRank(): void {\n    this.leaderboardService.getUserRank().subscribe(rank => {\n      this.userRank = rank;\n    });\n  }\n\n  createHabit(): void {\n    if (this.habitForm.valid) {\n      this.habitService.createHabit(this.habitForm.value as any).subscribe(() => {\n        this.loadHabits();\n        this.showCreateHabit = false;\n        this.habitForm.reset({ category: 'health', difficulty: 'medium', targetFrequency: 1 });\n      });\n    }\n  }\n\n  completeHabit(habitId: string): void {\n    this.habitService.completeHabit(habitId).subscribe(response => {\n      this.loadHabits();\n      // Update user XP and level\n      if (this.user) {\n        this.user.totalXP += response.xpEarned;\n        this.user.level = response.newLevel;\n      }\n    });\n  }\n\n  deleteHabit(habitId: string): void {\n    if (confirm('Are you sure you want to delete this habit?')) {\n      this.habitService.deleteHabit(habitId).subscribe(() => {\n        this.loadHabits();\n      });\n    }\n  }\n\n  isCompletedToday(habit: Habit): boolean {\n    if (!habit.lastCompletedDate) return false;\n    const today = new Date().toDateString();\n    return new Date(habit.lastCompletedDate).toDateString() === today;\n  }\n\n  getLevelProgress(): number {\n    if (!this.user) return 0;\n    const currentLevelXP = (this.user.level - 1) * (this.user.level - 1) * 50;\n    const nextLevelXP = this.user.level * this.user.level * 50;\n    const progress = ((this.user.totalXP - currentLevelXP) / (nextLevelXP - currentLevelXP)) * 100;\n    return Math.min(100, Math.max(0, progress));\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}